
services:
  # Caddy Proxy Server
  caddy:
    container_name: caddy
    build: ./proxy
    ports:
      - "80:80"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - chat-network
  # Frontend React App
  frontend:
    build: ./frontend
    ports:
      - "8000:8000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_WS_URL=ws://localhost:5001
    depends_on:
      - caddy
    networks:
      - chat-network

  # Participant Service
  participant-service:
    container_name: participant-service
    build: ./participant-service
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
      - DATABASE_URL=mongodb://mongodb:27017/chatapp
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - chat-network

  # Log Service
  log-service:
    container_name: log-service
    build: ./log-service
    ports:
      - "8004:8004"
    environment:
      - PORT=8004
      - DATABASE_URL=mongodb://mongodb:27017/chatapp
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - chat-network
  # Backend API Service
#  backend:
#    build: ./backend
#    ports:
#      - "5000:5000"
#    environment:
#      - DATABASE_URL=mongodb://mongo:27017/chatapp
#      - NODE_ENV=development
#    depends_on:
#      - mongo
#    networks:
#      - chat-network
#    volumes:
#      - ./backend:/app
#      - /app/node_modules

  # MongoDB Database
  mongodb:
    container_name: mongodb
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=chatapp
    volumes:
      - mongo_data:/data/db
    networks:
      - chat-network

  # Mongo Express Web Interface
  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    ports:
      - "8081:8081" # Expose Mongo Express on port 8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb # MongoDB service name
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin # Optional: Basic Auth username
      - ME_CONFIG_BASICAUTH_PASSWORD=admin # Optional: Basic Auth password
    depends_on:
      - mongodb
    networks:
      - chat-network

  # RabbitMQ Service
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - chat-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  

networks:
  chat-network:
    driver: bridge

volumes:
  mongo_data:
  rabbitmq_data:
  caddy_data:
  caddy_config:
